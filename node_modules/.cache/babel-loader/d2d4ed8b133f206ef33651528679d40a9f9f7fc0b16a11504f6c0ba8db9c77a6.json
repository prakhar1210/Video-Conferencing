{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\video-conferencing\\\\video-conferencing\\\\src\\\\Screens\\\\Room.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useCallback, useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport peer from \"../Service/Peer\";\nimport { useSocket } from \"../Context/SocketProvider\";\nimport { colors } from \"@mui/material\";\nimport style from './Room.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoomPage = () => {\n  _s();\n  const socket = useSocket();\n  const [remoteSocketId, setRemoteSocketId] = useState(null);\n  const [myStream, setMyStream] = useState();\n  const [remoteStream, setRemoteStream] = useState();\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const handleUserJoined = useCallback(({\n    email,\n    id\n  }) => {\n    console.log(`Email ${email} joined room`);\n    setRemoteSocketId(id);\n  }, []);\n  const startScreenShare = async () => {\n    try {\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n\n      // Add the screen stream to your peer connection for sending\n      for (const track of screenStream.getTracks()) {\n        peer.peer.addTrack(track, screenStream);\n      }\n      setMyStream(screenStream);\n      setIsScreenSharing(true);\n      socket.emit(\"start:screenShare\", remoteSocketId);\n    } catch (error) {\n      console.error(\"Error starting screen share:\", error);\n    }\n  };\n  const toggleScreenShare = async () => {\n    if (isScreenSharing) {\n      // If screen sharing is active, switch back to the camera stream\n      setMyStream(prevStream => {\n        prevStream.getTracks().forEach(track => {\n          track.stop();\n        });\n        return new Promise(async resolve => {\n          const cameraStream = await navigator.mediaDevices.getUserMedia({\n            audio: true,\n            video: true\n          });\n\n          // Add the camera stream to your peer connection\n          for (const track of cameraStream.getTracks()) {\n            peer.peer.addTrack(track, cameraStream);\n          }\n          resolve(cameraStream);\n        });\n      });\n    } else {\n      // If not screen sharing, start screen sharing\n      startScreenShare();\n    }\n    setIsScreenSharing(prevIsScreenSharing => !prevIsScreenSharing);\n  };\n  const handleCallUser = useCallback(async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    });\n    const offer = await peer.getOffer();\n    socket.emit(\"user:call\", {\n      to: remoteSocketId,\n      offer\n    });\n    setMyStream(stream);\n  }, [remoteSocketId, socket]);\n  const handleIncommingCall = useCallback(async ({\n    from,\n    offer\n  }) => {\n    setRemoteSocketId(from);\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    });\n    setMyStream(stream);\n    console.log(`Incoming Call`, from, offer);\n    const ans = await peer.getAnswer(offer);\n    socket.emit(\"call:accepted\", {\n      to: from,\n      ans\n    });\n  }, [socket]);\n  const sendStreams = useCallback(() => {\n    for (const track of myStream.getTracks()) {\n      peer.peer.addTrack(track, myStream);\n    }\n  }, [myStream]);\n  const handleCallAccepted = useCallback(({\n    from,\n    ans\n  }) => {\n    peer.setLocalDescription(ans);\n    console.log(\"Call Accepted!\");\n    sendStreams();\n  }, [sendStreams]);\n  const handleNegoNeeded = useCallback(async () => {\n    const offer = await peer.getOffer();\n    socket.emit(\"peer:nego:needed\", {\n      offer,\n      to: remoteSocketId\n    });\n  }, [remoteSocketId, socket]);\n  useEffect(() => {\n    peer.peer.addEventListener(\"negotiationneeded\", handleNegoNeeded);\n    return () => {\n      peer.peer.removeEventListener(\"negotiationneeded\", handleNegoNeeded);\n    };\n  }, [handleNegoNeeded]);\n  const handleNegoNeedIncomming = useCallback(async ({\n    from,\n    offer\n  }) => {\n    const ans = await peer.getAnswer(offer);\n    socket.emit(\"peer:nego:done\", {\n      to: from,\n      ans\n    });\n  }, [socket]);\n  const handleNegoNeedFinal = useCallback(async ({\n    ans\n  }) => {\n    await peer.setLocalDescription(ans);\n  }, []);\n  useEffect(() => {\n    peer.peer.addEventListener(\"track\", async ev => {\n      const remoteStream = ev.streams;\n      console.log(\"GOT TRACKS!!\");\n      setRemoteStream(remoteStream[0]);\n    });\n  }, []);\n  useEffect(() => {\n    socket.on(\"user:joined\", handleUserJoined);\n    socket.on(\"incomming:call\", handleIncommingCall);\n    socket.on(\"call:accepted\", handleCallAccepted);\n    socket.on(\"peer:nego:needed\", handleNegoNeedIncomming);\n    socket.on(\"peer:nego:final\", handleNegoNeedFinal);\n    return () => {\n      socket.off(\"user:joined\", handleUserJoined);\n      socket.off(\"incomming:call\", handleIncommingCall);\n      socket.off(\"call:accepted\", handleCallAccepted);\n      socket.off(\"peer:nego:needed\", handleNegoNeedIncomming);\n      socket.off(\"peer:nego:final\", handleNegoNeedFinal);\n    };\n  }, [socket, handleUserJoined, handleIncommingCall, handleCallAccepted, handleNegoNeedIncomming, handleNegoNeedFinal]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Meeting Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: remoteSocketId ? \"Connected\" : \"Let some one to join the meeting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), myStream && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendStreams,\n      children: \"Send Stream\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 20\n    }, this), remoteSocketId && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCallUser,\n      children: \"CALL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.screen,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.stream,\n        children: myStream && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: isScreenSharing ? \"Screen Share\" : \"My Stream\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n            playing: true,\n            muted: true,\n            height: \"600px\",\n            width: \"600px\",\n            url: myStream\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleScreenShare,\n            children: isScreenSharing ? \"Stop Screen Share\" : \"Start Screen Share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.stream,\n        children: remoteStream && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Remote Stream\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n            playing: true,\n            muted: true,\n            height: \"600px\",\n            width: \"600px\",\n            url: remoteStream\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomPage, \"+EnyrL6Hm8tCGmfenE06Hws6Vpc=\", false, function () {\n  return [useSocket];\n});\n_c = RoomPage;\nexport default RoomPage;\nvar _c;\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"names":["React","useEffect","useCallback","useState","ReactPlayer","peer","useSocket","colors","style","jsxDEV","_jsxDEV","Fragment","_Fragment","RoomPage","_s","socket","remoteSocketId","setRemoteSocketId","myStream","setMyStream","remoteStream","setRemoteStream","isScreenSharing","setIsScreenSharing","handleUserJoined","email","id","console","log","startScreenShare","screenStream","navigator","mediaDevices","getDisplayMedia","video","track","getTracks","addTrack","emit","error","toggleScreenShare","prevStream","forEach","stop","Promise","resolve","cameraStream","getUserMedia","audio","prevIsScreenSharing","handleCallUser","stream","offer","getOffer","to","handleIncommingCall","from","ans","getAnswer","sendStreams","handleCallAccepted","setLocalDescription","handleNegoNeeded","addEventListener","removeEventListener","handleNegoNeedIncomming","handleNegoNeedFinal","ev","streams","on","off","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","screen","playing","muted","height","width","url","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/video-conferencing/video-conferencing/src/Screens/Room.jsx"],"sourcesContent":["import React, { useEffect, useCallback, useState } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport peer from \"../Service/Peer\";\r\nimport { useSocket } from \"../Context/SocketProvider\";\r\nimport { colors } from \"@mui/material\";\r\nimport style from './Room.module.css'\r\n\r\nconst RoomPage = () => {\r\n  const socket = useSocket();\r\n  const [remoteSocketId, setRemoteSocketId] = useState(null);\r\n  const [myStream, setMyStream] = useState();\r\n  const [remoteStream, setRemoteStream] = useState();\r\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\r\n\r\n  const handleUserJoined = useCallback(({ email, id }) => {\r\n    console.log(`Email ${email} joined room`);\r\n    setRemoteSocketId(id);\r\n  }, []);\r\n\r\n  const startScreenShare = async () => {\r\n    try {\r\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\r\n        video: true,\r\n      });\r\n  \r\n      // Add the screen stream to your peer connection for sending\r\n      for (const track of screenStream.getTracks()) {\r\n        peer.peer.addTrack(track, screenStream);\r\n      }\r\n  \r\n      setMyStream(screenStream);\r\n      setIsScreenSharing(true);\r\n  \r\n      socket.emit(\"start:screenShare\", remoteSocketId);\r\n  \r\n    } catch (error) {\r\n      console.error(\"Error starting screen share:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n  const toggleScreenShare = async () => {\r\n    if (isScreenSharing) {\r\n      // If screen sharing is active, switch back to the camera stream\r\n      setMyStream((prevStream) => {\r\n        prevStream.getTracks().forEach((track) => {\r\n          track.stop();\r\n        });\r\n  \r\n        return new Promise(async (resolve) => {\r\n          const cameraStream = await navigator.mediaDevices.getUserMedia({\r\n            audio: true,\r\n            video: true,\r\n          });\r\n  \r\n          // Add the camera stream to your peer connection\r\n          for (const track of cameraStream.getTracks()) {\r\n            peer.peer.addTrack(track, cameraStream);\r\n          }\r\n  \r\n          resolve(cameraStream);\r\n        });\r\n      });\r\n    } else {\r\n      // If not screen sharing, start screen sharing\r\n      startScreenShare();\r\n    }\r\n  \r\n    setIsScreenSharing((prevIsScreenSharing) => !prevIsScreenSharing);\r\n  };\r\n  \r\n  \r\n\r\n  const handleCallUser = useCallback(async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n      video: true,\r\n    });\r\n    const offer = await peer.getOffer();\r\n    socket.emit(\"user:call\", { to: remoteSocketId, offer });\r\n    setMyStream(stream);\r\n  }, [remoteSocketId, socket]);\r\n\r\n  const handleIncommingCall = useCallback(\r\n    async ({ from, offer }) => {\r\n      setRemoteSocketId(from);\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        audio: true,\r\n        video: true,\r\n      });\r\n      setMyStream(stream);\r\n      console.log(`Incoming Call`, from, offer);\r\n      const ans = await peer.getAnswer(offer);\r\n      socket.emit(\"call:accepted\", { to: from, ans });\r\n    },\r\n    [socket]\r\n  );\r\n\r\n  const sendStreams = useCallback(() => {\r\n    for (const track of myStream.getTracks()) {\r\n      peer.peer.addTrack(track, myStream);\r\n    }\r\n  }, [myStream]);\r\n\r\n  const handleCallAccepted = useCallback(\r\n    ({ from, ans }) => {\r\n      peer.setLocalDescription(ans);\r\n      console.log(\"Call Accepted!\");\r\n      sendStreams();\r\n    },\r\n    [sendStreams]\r\n  );\r\n\r\n  const handleNegoNeeded = useCallback(async () => {\r\n    const offer = await peer.getOffer();\r\n    socket.emit(\"peer:nego:needed\", { offer, to: remoteSocketId });\r\n  }, [remoteSocketId, socket]);\r\n\r\n  useEffect(() => {\r\n    peer.peer.addEventListener(\"negotiationneeded\", handleNegoNeeded);\r\n    return () => {\r\n      peer.peer.removeEventListener(\"negotiationneeded\", handleNegoNeeded);\r\n    };\r\n  }, [handleNegoNeeded]);\r\n\r\n  const handleNegoNeedIncomming = useCallback(\r\n    async ({ from, offer }) => {\r\n      const ans = await peer.getAnswer(offer);\r\n      socket.emit(\"peer:nego:done\", { to: from, ans });\r\n    },\r\n    [socket]\r\n  );\r\n\r\n  const handleNegoNeedFinal = useCallback(async ({ ans }) => {\r\n    await peer.setLocalDescription(ans);\r\n  }, []);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    peer.peer.addEventListener(\"track\", async (ev) => {\r\n      const remoteStream = ev.streams;\r\n      console.log(\"GOT TRACKS!!\");\r\n      setRemoteStream(remoteStream[0]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"user:joined\", handleUserJoined);\r\n    socket.on(\"incomming:call\", handleIncommingCall);\r\n    socket.on(\"call:accepted\", handleCallAccepted);\r\n    socket.on(\"peer:nego:needed\", handleNegoNeedIncomming);\r\n    socket.on(\"peer:nego:final\", handleNegoNeedFinal);\r\n\r\n    return () => {\r\n      socket.off(\"user:joined\", handleUserJoined);\r\n      socket.off(\"incomming:call\", handleIncommingCall);\r\n      socket.off(\"call:accepted\", handleCallAccepted);\r\n      socket.off(\"peer:nego:needed\", handleNegoNeedIncomming);\r\n      socket.off(\"peer:nego:final\", handleNegoNeedFinal);\r\n    };\r\n  }, [\r\n    socket,\r\n    handleUserJoined,\r\n    handleIncommingCall,\r\n    handleCallAccepted,\r\n    handleNegoNeedIncomming,\r\n    handleNegoNeedFinal,\r\n  ]);\r\n\r\n  return (\r\n    <div >\r\n      <h1>Meeting Room</h1>\r\n      <h4>{remoteSocketId ? \"Connected\" : \"Let some one to join the meeting\"}</h4>\r\n      {myStream && <button onClick={sendStreams}>Send Stream</button>}\r\n      {remoteSocketId && <button onClick={handleCallUser}>CALL</button>}\r\n      <div className={style.screen}>\r\n        <div className={style.stream}>\r\n      {myStream && (\r\n        <>\r\n          <h1>{isScreenSharing ? \"Screen Share\" : \"My Stream\"}</h1>\r\n    <ReactPlayer\r\n      playing\r\n      muted\r\n      height=\"600px\"\r\n      width=\"600px\"\r\n      url={myStream}\r\n    />\r\n    <button onClick={toggleScreenShare}>\r\n      {isScreenSharing ? \"Stop Screen Share\" : \"Start Screen Share\"}\r\n    </button>\r\n  </>\r\n\r\n      )}\r\n        </div>\r\n        <div className={style.stream}>\r\n      {remoteStream && (\r\n        <>\r\n          <h1>Remote Stream</h1>\r\n          <ReactPlayer\r\n            playing\r\n            muted\r\n            height=\"600px\"\r\n            width=\"600px\"\r\n            url={remoteStream}\r\n          />\r\n        </>\r\n      )}\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}