{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\video-conferencing\\\\video-conferencing\\\\src\\\\Screens\\\\Room.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport SimplePeer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomPage = () => {\n  _s();\n  const [remoteSocketId, setRemoteSocketId] = useState(null);\n  const [myStream, setMyStream] = useState(null);\n  const [remoteStream, setRemoteStream] = useState(null);\n  const socket = useSocket();\n  const remoteVideoRef = useRef(null);\n  const handleUserJoined = ({\n    email,\n    id\n  }) => {\n    console.log(`Email ${email} has joined the meeting`);\n    setRemoteSocketId(id);\n  };\n  const initiatePeerConnection = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: true\n      });\n      setMyStream(stream);\n\n      // Initialize the WebRTC peer connection\n      const peer = new SimplePeer({\n        initiator: true,\n        stream\n      });\n      peer.on('signal', data => {\n        // Send the offer to the remote peer via your signaling server\n        socket.emit('user:joined', {\n          to: remoteSocketId,\n          offer: data\n        });\n      });\n      peer.on('stream', remoteStream => {\n        // Handle the remote stream when it becomes available\n        setRemoteStream(remoteStream);\n      });\n\n      // Handle the offer and answer exchange with the signaling server\n      // socket.on('offer', (offer) => {\n      //   peer.signal(offer);\n      // });\n    } catch (error) {\n      console.error('Error accessing media devices:', error);\n    }\n  };\n  useEffect(() => {\n    socket.on('user:joined', handleUserJoined);\n    return () => {\n      socket.off('room:join', handleUserJoined);\n    };\n  }, [socket, handleUserJoined]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Room Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: remoteSocketId ? 'Connected' : 'No one in the meeting, please wait for someone to join.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), remoteSocketId && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: initiatePeerConnection,\n      children: \"Start the Meeting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), myStream && /*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      muted: true,\n      playsInline: true,\n      height: '400px',\n      width: '450px',\n      srcObject: myStream // Set srcObject directly on the video element\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), remoteStream && /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: remoteVideoRef,\n      autoPlay: true,\n      playsInline: true,\n      height: '400px',\n      width: '450px',\n      srcObject: remoteStream // Set srcObject directly on the video element\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomPage, \"6ZgYRPxCIiE6OVC37Xus+It+qeE=\", true);\n_c = RoomPage;\nexport default RoomPage;\nvar _c;\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","SimplePeer","jsxDEV","_jsxDEV","RoomPage","_s","remoteSocketId","setRemoteSocketId","myStream","setMyStream","remoteStream","setRemoteStream","socket","useSocket","remoteVideoRef","handleUserJoined","email","id","console","log","initiatePeerConnection","stream","navigator","mediaDevices","getUserMedia","audio","video","peer","initiator","on","data","emit","to","offer","error","off","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","autoPlay","muted","playsInline","height","width","srcObject","ref","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/video-conferencing/video-conferencing/src/Screens/Room.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport SimplePeer from 'simple-peer';\r\n\r\nconst RoomPage = () => {\r\n  const [remoteSocketId, setRemoteSocketId] = useState(null);\r\n  const [myStream, setMyStream] = useState(null);\r\n  const [remoteStream, setRemoteStream] = useState(null);\r\n  const socket = useSocket();\r\n  const remoteVideoRef = useRef(null);\r\n\r\n  const handleUserJoined = ({ email, id }) => {\r\n    console.log(`Email ${email} has joined the meeting`);\r\n    setRemoteSocketId(id);\r\n  };\r\n\r\n  const initiatePeerConnection = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        audio: true,\r\n        video: true,\r\n      });\r\n      setMyStream(stream);\r\n\r\n      // Initialize the WebRTC peer connection\r\n      const peer = new SimplePeer({ initiator: true, stream });\r\n\r\n      peer.on('signal', (data) => {\r\n        // Send the offer to the remote peer via your signaling server\r\n        socket.emit('user:joined', { to: remoteSocketId, offer: data });\r\n      });\r\n\r\n      peer.on('stream', (remoteStream) => {\r\n        // Handle the remote stream when it becomes available\r\n        setRemoteStream(remoteStream);\r\n      });\r\n\r\n      // Handle the offer and answer exchange with the signaling server\r\n      // socket.on('offer', (offer) => {\r\n      //   peer.signal(offer);\r\n      // });\r\n    } catch (error) {\r\n      console.error('Error accessing media devices:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on('user:joined', handleUserJoined);\r\n\r\n    return () => {\r\n      socket.off('room:join', handleUserJoined);\r\n    };\r\n  }, [socket, handleUserJoined]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Room Page</h1>\r\n      <h4>\r\n        {remoteSocketId\r\n          ? 'Connected'\r\n          : 'No one in the meeting, please wait for someone to join.'}\r\n      </h4>\r\n      {remoteSocketId && (\r\n        <button\r\n          type=\"button\"\r\n          onClick={initiatePeerConnection}\r\n        >\r\n          Start the Meeting\r\n        </button>\r\n      )}\r\n      {myStream && (\r\n        <video\r\n          autoPlay\r\n          muted\r\n          playsInline\r\n          height={'400px'}\r\n          width={'450px'}\r\n          srcObject={myStream} // Set srcObject directly on the video element\r\n        />\r\n      )}\r\n      {remoteStream && (\r\n        <video\r\n          ref={remoteVideoRef}\r\n          autoPlay\r\n          playsInline\r\n          height={'400px'}\r\n          width={'450px'}\r\n          srcObject={remoteStream} // Set srcObject directly on the video element\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}